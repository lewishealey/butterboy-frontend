{"version":3,"sources":["../src/index.js"],"names":["setIfMissing","patches","Tabs","React","createRef","activeTab","firstFieldInput","current","focus","tabName","props","type","fields","filter","f","fieldset","hidden","arr","result","forEach","a","push","Array","isArray","concat","flattenFields","path","childPath","PathUtils","startsWith","trimLeft","fieldSets","fieldsets","single","fs","field","some","sort","b","options","sortOrder","length","find","findIndex","name","value","undefined","title","description","getTabFields","markers","reduce","fm","getFieldMarkers","fieldName","marker","state","onBlur","onFocus","fieldPatchEvent","onChange","readOnly","e","prefixAll","prepend","_type","setState","activeTabPanel","input","level","focusPath","otherProps","tab","getActiveTab","tabFields","getActiveTabFields","contentStyle","styles","content_document","layout","content_object","getFieldsets","tabs","tab_headers","map","getTabMarkers","validation","errors","warnings","hasErrors","hasWarnings","hasIcon","iconStyles","icon","icon__error","icon__warning","tab__active","onTabClicked","tab_inner","field_grid","columnGap","rowGap","columns","i","fieldLevel","fieldRef","fieldMarkers","fieldPath","fieldType","fieldReadOnly","fieldValue","getFieldValue","fieldTitle","getFieldTitle","fieldDescription","getFieldDescription","fieldWrapperProps","key","className","defaultStyles","root","field_wrapper","fieldProps","ref","isRoot","onFieldFocusHandler","patchEvent","onFieldChangeHandler","onFieldBlurHandler","expectedType","actualType","isCompatible","jsonType","setInput","Component","PropTypes","shape","array","isRequired","number","string","func"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withDocument,\n  FormBuilderInput,\n  patches,\n} from 'part:@sanity/form-builder';\nimport { Grid } from '@sanity/ui'\nimport { log, resolveTypeName } from './utils';\nimport InvalidValue from '@sanity/form-builder/lib/inputs/InvalidValueInput';\nimport * as PathUtils from '@sanity/util/paths.js';\nimport ErrorOutlineIcon from 'part:@sanity/base/error-outline-icon';\nimport WarningOutlineIcon from 'part:@sanity/base/warning-outline-icon';\nimport defaultStyles from 'part:@sanity/components/formfields/default-style';\nimport classNames from 'classnames';\nimport styles from './tabs.css';\n\nconst { setIfMissing } = patches;\n\nclass Tabs extends React.Component {\n  static propTypes = {\n    type: PropTypes.shape({\n      fieldsets: PropTypes.array.isRequired,\n      fields: PropTypes.array.isRequired,\n    }).isRequired,\n    level: PropTypes.number,\n    value: PropTypes.shape({\n      _type: PropTypes.string,\n    }),\n    focusPath: PropTypes.array,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n  };\n\n  firstFieldInput = React.createRef();\n  activeTabPanel = React.createRef();\n\n  state = {\n    activeTab: '',\n  };\n\n  focus = () => {\n    if (this.firstFieldInput.current) {\n      this.firstFieldInput.current.focus();\n    } else {\n    }\n\n    log(`[Tabs] Focus`);\n  };\n\n  getTabFields = (tabName) => {\n    return this.props.type.fields.filter(\n      (f) => f.fieldset == tabName && f.type.hidden !== true\n    );\n  };\n\n  flattenFields = (arr) => {\n    var result = [];\n    arr.forEach((a) => {\n      result.push(a);\n      if (a.type && Array.isArray(a.type.fields)) {\n        result = result.concat(this.flattenFields(a.type.fields));\n      }\n    });\n    return result;\n  };\n\n  trimChildPath = (path, childPath) => {\n    return PathUtils.startsWith(path, childPath)\n      ? PathUtils.trimLeft(path, childPath)\n      : [];\n  };\n\n  getFieldsets = (type) => {\n    var fieldSets = [];\n\n    if (\n      type &&\n      type.fieldsets &&\n      type.fieldsets[0].single !== true\n    ) {\n      fieldSets = type.fieldsets.filter((fs) =>\n        (fs.fields ?? [fs.field]).some((field) => field.type.hidden !== true)\n      ).sort((a, b) => {\n        if (a.options && b.options) {\n          return a.options.sortOrder - b.options.sortOrder;\n        }\n\n        return 0;\n      });\n    }\n\n    return fieldSets;\n  };\n\n  getFieldSet = (path) => {\n    if (path && path.length > 0) {\n      var f = this.props.type.fields.find((f) => {\n        return path.findIndex(f.name) > -1;\n      });\n\n      return f.fieldset;\n    }\n  };\n\n  getFieldValue = (value, field) => {\n    if (value && value[field.name] !== undefined) {\n      return value[field.name];\n    }\n\n    return undefined;\n  }\n  \n  getFieldTitle = (field) => {\n    if (field.type) {\n      return field.type.title ?? field.type.name;\n    }\n\n    return \"\";\n  }\n  \n  getFieldDescription = (field) => {\n    if (field.type) {\n      return field.type.description;\n    }\n\n    return \"\";\n  }\n\n  getTabMarkers = (tabName) => {\n    var fields = this.flattenFields(this.getTabFields(tabName));\n    var markers = fields.reduce((result, f) => {\n      var fm = this.getFieldMarkers(f.name);\n      if (fm && fm.length > 0) {\n        result = result.concat(fm);\n      }\n\n      return result;\n    }, []);\n\n    return markers;\n  };\n\n  getFieldMarkers = (fieldName) => {\n    return this.props.markers.filter((marker) =>\n      PathUtils.startsWith([fieldName], marker.path)\n    );\n  };\n\n  getActiveTab = () => {\n    if (this.state.activeTab !== '' && this.props.type.fieldsets) {\n      return this.props.type.fieldsets.find(\n        (f) => f.name == this.state.activeTab\n      );\n    }\n\n    return null;\n  };\n\n  getActiveTabFields = () => {\n    if (this.state.activeTab !== '') {\n      return this.getTabFields(this.state.activeTab);\n    }\n\n    return null;\n  };\n\n  onFieldBlurHandler = (field) => {\n    const { onBlur, type } = this.props;\n\n    log(`[Tabs] FieldBlurred:`, field);\n\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  onFieldFocusHandler = (field, path) => {\n    const { onFocus, type } = this.props;\n\n    log(`[Tabs] FieldFocused:`, field, path);\n\n    if (onFocus) {\n      onFocus(path);\n    }\n  };\n\n  onFieldChangeHandler = (field, fieldPatchEvent) => {\n    const { onChange, type } = this.props;\n\n    if (!field.type.readOnly) {\n      var e = fieldPatchEvent\n        .prefixAll(field.name)\n        .prepend(setIfMissing({ _type: type.name }));\n\n      log(`[Tabs] FieldChanged:`, field, e);\n\n      if (onChange) {\n        onChange(e);\n      }\n    }\n  };\n\n  onHandleInvalidValue = (field, fieldPatchEvent) => {\n    const { onChange, type } = this.props;\n  };\n\n  onTabClicked = (fieldset) => {\n    this.setState({\n      activeTab: fieldset.name,\n    });\n    this.activeTabPanel.current.focus();\n  };\n\n  setInput = (input) => {\n    this.firstFieldInput = input;\n  };\n\n  componentDidMount() {\n    if (this.state.activeTab === '' && this.props.type.fieldsets.length > 0) {\n      var fieldsets = this.getFieldsets(this.props.type);\n      this.setState({\n        activeTab: fieldsets[0].name,\n      });\n    }\n  }\n\n  render = () => {\n    log(`[Tabs] Props:`, this.props);\n\n    const {\n      level,\n      readOnly,\n      focusPath,\n      value,\n      type,\n      ...otherProps\n    } = this.props;\n    const tab = this.getActiveTab();\n    const tabFields = this.getActiveTabFields();\n\n    log(\"[Tabs] Active Tab\", tab);\n    log(\"[Tabs] Actibe Tab Fields\", tabFields);\n\n    let contentStyle = styles.content_document;\n\n    if (type.options.layout === 'object') {\n      contentStyle = styles.content_object;\n    }\n\n    var fieldSets = this.getFieldsets(type);\n\n    return (\n      <div className={styles.tabs}>\n        {fieldSets.length > 1 && (\n          <div className={styles.tab_headers}>\n            {fieldSets.map((fs) => {\n              var markers = this.getTabMarkers(fs.name);\n              var validation = markers.filter(\n                (marker) => marker.type === 'validation'\n              );\n              var errors = validation.filter(\n                (marker) => marker.level === 'error'\n              );\n              var warnings = validation.filter(\n                (marker) => marker.level === 'warning'\n              );\n              var hasErrors = errors.length > 0;\n              var hasWarnings = warnings.length > 0;\n              var hasIcon = hasErrors || hasWarnings;\n              var title = fs.title || 'Other';\n\n              const iconStyles = classNames(\n                styles.icon,\n                hasErrors && styles.icon__error,\n                !hasErrors && hasWarnings && styles.icon__warning\n              );\n\n              return (\n                <button\n                  key={fs.name || 'other'}\n                  className={classNames(styles.tab, {\n                    [styles.tab__active]: this.state.activeTab == fs.name,\n                  })}\n                  onClick={() => this.onTabClicked(fs)}\n                  role=\"tab\"\n                  aria-selected={this.state.activeTab == fs.name}\n                  aria-controls={`${fs.name}-tab-panel`}\n                  id={`${fs.name}-tab`}\n                >\n                  <div className={styles.tab_inner}>\n                    {title}\n                    {hasIcon && (\n                      <span className={iconStyles}>\n                        {hasErrors && <ErrorOutlineIcon />}\n                        {!hasErrors && hasWarnings && <WarningOutlineIcon />}\n                      </span>\n                    )}\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n        )}\n        <div\n          className={contentStyle}\n          tabIndex={0}\n          role=\"tabpanel\"\n          id={`${this.state.activeTab}-tab-panel`}\n          aria-labelledby={`${this.state.activeTab}-tab`}\n          ref={this.activeTabPanel}\n        >\n          <div className={styles.field_grid}>\n            <Grid style={{columnGap: \"1.25rem\",rowGap: \"2rem\"}} columns={tab?.options?.columns ? tab.options.columns : 1}>\n              {tabFields &&\n                tabFields.map((field, i) => {\n                  var fieldLevel = level + 1;\n                  var fieldRef = i === 0 ? this.firstFieldInput : null;\n                  var fieldMarkers = this.getFieldMarkers(field.name);\n                  var fieldPath = [field.name];\n                  var fieldType = field.type;\n                  var fieldReadOnly = field.type.readOnly || readOnly;\n                  var fieldValue = this.getFieldValue(value, field);\n                  var fieldTitle = this.getFieldTitle(field);\n                  var fieldDescription = this.getFieldDescription(field);\n\n                  var fieldWrapperProps = {\n                    key: field.name,\n                    className: classNames(defaultStyles.root, styles.field_wrapper),\n                  };\n\n                  var fieldProps = {\n                    ...otherProps,\n                    ref: fieldRef,\n                    type: fieldType,\n                    markers: fieldMarkers,\n                    level: fieldLevel,\n                    path: fieldPath,\n                    focusPath: focusPath,\n                    readOnly: fieldReadOnly,\n                    value: fieldValue,\n                    isRoot: false,\n                    title: fieldTitle,\n                    description: fieldDescription,\n                    onFocus: (path) => this.onFieldFocusHandler(field, path),\n                    onChange: (patchEvent) => this.onFieldChangeHandler(field, patchEvent),\n                    onBlur: () => this.onFieldBlurHandler(field),\n                  };\n\n                  // Handle invalid values.\n                  // Lifted from https://github.com/sanity-io/sanity/blob/next/packages/%40sanity/form-builder/src/inputs/ObjectInput/ObjectInputField.tsx\n                  if (typeof fieldValue !== 'undefined') {\n                    const expectedType = fieldType.name;\n                    const actualType = resolveTypeName(fieldValue);\n                    const isCompatible = actualType === fieldType.jsonType;\n\n                    if (expectedType !== actualType && !isCompatible) {\n                      return (\n                        <div {...fieldWrapperProps}>\n                          <InvalidValue\n                            value={fieldValue}\n                            onChange={fieldProps.onChange}\n                            validTypes={[fieldType.name]}\n                            actualType={actualType}\n                            ref={this.setInput}\n                          />\n                        </div>\n                      );\n                    }\n                  }\n\n                  return (\n                    <div {...fieldWrapperProps}>\n                      <FormBuilderInput {...fieldProps} />\n                    </div>\n                  );\n                })}\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default withDocument(Tabs);\n"],"file":"index.js"}