import Head from 'next/head'
import { connectToDatabase } from "utils/mongodb";
import { ObjectId } from 'mongodb';
import { urlFor } from "helpers/sanity";
import { useEffect } from "react";
import moment from 'moment';

export default function Confirmed({ order }) {
    const format = "dddd, MMMM Do YYYY";

    useEffect(() => {
        const profile = {
            "emails": [
                "fififw@lewi.sh"
            ]
        }

        fetch("/api/subscribe-email", {
            method: "POST",
            headers: {
                Accept: "application/json, text/plain, */*",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(profile)
        }).then((res) => {
            //console.log(res);
        }).catch(rejected => {
            console.log(rejected);
        });

    }, [])

    return (
        <div>
            <Head>
                <title>Confirmed!</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className='flex min-h-screen'>
                <div className='flex-1 bg-cream py-16 px-16 flex justify-center'>
                    <div className='flex flex-col w-full space-y-4 max-w-xl'>
                        <h1 className="text-7xl text-vibrant font-bold font-display uppercase">Confirmed!</h1>
                        <h2 className="text-2xl font-body">We'll send you a confirmation email with all the details you need.</h2>
                        <div className="grid grid-cols-2 w-full border-b border-gray-300 pb-4 gap-6 pt-4">
                            <div className="space-y-2">
                                <h4 className="font-body font-bold text-xl text-vibrant">Order number</h4>
                                <p className="font-body text-xl">#{order._id}</p>
                            </div>
                            <div className="space-y-2">
                                <h4 className="font-body font-bold text-xl text-vibrant">Order date</h4>
                                <p className="font-body text-xl">{moment(order.pick_up_date).format(format).toString()}</p>
                            </div>
                        </div>
                        <div className="space-y-2 border-b border-gray-300 pb-4">
                            <h4 className="font-body font-bold text-xl text-vibrant">Customer details</h4>
                            <p className="font-body text-lg">{order.email} - {order.phone}</p>
                        </div>
                        {order.deliveryType === "collect" &&
                            <div className="space-y-2 border-b border-gray-300 pb-4">
                                <h4 className="font-body font-bold text-xl text-vibrant">Collection details</h4>
                                <p className="font-body text-lg">{moment(order.pick_up_date).format(format).toString()} {order.pick_up_time}</p>
                            </div>}
                        <section className="grid grid-cols-2 gap-20">
                            <div className="font-body text-xl">
                                <h4 className="text-vibrant mb-2">Shipping address</h4>
                                <p>{order.shipping.address1}</p>
                                <p>{order.shipping.address2}</p>
                                <p>{order.shipping.suburb}</p>
                                <p>{order.shipping.postcode}</p>
                                <p>{order.shipping.country}</p>
                            </div>
                            <div className="font-body text-xl">
                                <h4 className="text-vibrant mb-2">Billing address</h4>
                                <p>{order.billing.address1}</p>
                                <p>{order.billing.address2}</p>
                                <p>{order.billing.suburb}</p>
                                <p>{order.billing.postcode}</p>
                                <p>{order.billing.country}</p>
                            </div>
                        </section>
                    </div>
                </div>
                <div className='flex-1'>
                    <div className="p-12 space-y-6 pt-24 top-0 sticky">
                        {order.items.map((product, i) =>
                            <div className="flex w-full" key={`product_${i}`}>
                                <div className="w-full flex space-x-2 items-center justify-between">
                                    <div className="flex items-center space-x-4">
                                        <div className="relative h-12 w-12 bg-cream rounded-lg">
                                            <div className="h-12 w-12 overflow-hidden"><img src={urlFor(product.image)} /></div>
                                            <div className="h-5 w-5 bg-vibrant rounded-full text-xs text-center flex items-center text-white justify-center absolute -top-2 -right-2">{product.quantity}</div>
                                        </div>
                                        <h3 className="font-body text-xl text-gray-800">{product.title}</h3>
                                    </div>
                                    <span className="font-body text-xl text-gray-800">${product.price}</span>
                                </div>
                            </div>
                        )}
                        <div className="flex flex-col justify-between py-6 border-t border-b space-y-2">
                            <div className="flex w-full justify-between">
                                <div className="font-body text-xl">Subtotal</div>
                                <div className="font-body text-xl">${order.total.totalPrice.toFixed(2)}</div>
                            </div>
                            {(order.deliveryType === "delivery" && order.shipping) && <div className="flex w-full justify-between">
                                <div className="font-body text-xl">Shipping ({order.shipping.type})</div>
                                <div className="font-body text-xl">${(order.shipping.price).toFixed(2)}</div>
                            </div>}
                        </div>
                        <div className="flex flex-col justify-between space-y-2">
                            <div className="flex w-full justify-between">
                                <div className="font-body text-xl text-gray-500">Total</div>
                                <div className="font-body text-2xl space-x-2 items-center flex">
                                    <span className="text-base text-gray-500">AUD</span>
                                    {order.deliveryCost ? <span className="text-3xl">${(order.total.totalPrice + order.deliveryCost).toFixed(2)}</span> : <span className="text-3xl">${order.total.totalPrice.toFixed(2)}</span>}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}

export async function getServerSideProps(context) {
    const { db } = await connectToDatabase();
    const { slug = "" } = context.params;

    const order = await db.collection("orders").findOne({ _id: ObjectId(slug) });


    return {
        props: {
            order: JSON.parse(JSON.stringify(order)),
        },
    };
}