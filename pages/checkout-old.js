import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import { useCart } from 'contexts/cart-context';
import { loadStripe } from '@stripe/stripe-js';
import { ChevronRightIcon } from '@heroicons/react/solid';
import axios from 'axios';
import { useState } from 'react';
import { createTheOrder } from 'utils/wordpress';

const defaultCustomerInfo = {
  firstName: 'Lewis',
  lastName: 'Healey',
  address1: '88 Macleay Street',
  address2: '',
  city: 'Sydney',
  country: 'Australia',
  suburb: 'Greystanes',
  state: 'NSW',
  postcode: '2044',
  email: 'hello@lewi.sh',
  phone: '0466154186',
  company: '',
  errors: null
}

export default function Checkout() {
  const { products, deliveryType, total } = useCart();

  const initialState = {
    billing: {
        ...defaultCustomerInfo,
    },
    shipping: {
        ...defaultCustomerInfo
    },
    deliveryType: deliveryType,
    line_items: products,
    newsletter: false,
    orderNotes: '',
    billingDifferentThanShipping: false,
    paymentMethod: "stripe",
    payment_method_title: "Credit card",
    set_paid: true,
};

  const [input, setInput] = useState(initialState);
  const inputClasses = "h-11 border border-gray-300 px-3 rounded";
  const breadcrumbClasses = "hover:underline";
  const [requestError, setRequestError] = useState(null);
  const [stage, setStage] = useState(1);

  const createCheckOutSession = async () => {
      const stripe = await stripePromise;
      const checkoutSession = await axios.post('/api/create-stripe-session', {
        item: item,
      });
      const result = await stripe.redirectToCheckout({
        sessionId: checkoutSession.data.id,
      });
      if (result.error) {
        alert(result.error.message);
      }
  };
  
  const handleOnChange = (event) => {
      const {target} = event || {};
      const newState = {...input, [target.name]: target.value};
      setInput(newState);
  };

  const handleSignup = (event) => {
      const {target} = event || {};
      const newState = {...input, newsletter: target.value};
      setInput(newState);
  };

  function handleCheckout() {
    //const createCustomerOrder = await createTheOrder( input, setRequestError,  '' );
    console.log("efwew");
  }

  console.log(input);

  return (
    <div>
      <Head>
        <title>Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='flex min-h-screen'>
        <div className='flex-1 bg-gray-100 py-16 px-16 flex justify-center'>
          <div className='flex flex-col w-full space-y-8 max-w-xl'>
            <h1 className="text-7xl text-vibrant font-bold font-display uppercase">Checkout</h1>
            <div className="flex space-x-2 items-center text-sm">
              <button className={breadcrumbClasses} onClick={() => setStage(1)}>Cart</button>
              <ChevronRightIcon className="h-4 w-4" />
              <button className={breadcrumbClasses} onClick={() => setStage(2)}>Information</button>
              <ChevronRightIcon className="h-4 w-4" />
              {deliveryType == "collect" ? <button className={breadcrumbClasses} onClick={() => setStage(3)}>Collection</button> : <button className={breadcrumbClasses} onClick={() => setStage(3)}>Shipping</button>}
              <ChevronRightIcon className="h-4 w-4" />
              <button className={breadcrumbClasses} onClick={() => setStage(4)}>Payment</button>
              <ChevronRightIcon className="h-4 w-4" />
              <button className={breadcrumbClasses} onClick={() => setStage(5)} disabled>Review</button>
            </div>
            <fieldset className='flex flex-col space-y-2'>
              <label className='font-heading text-vibrant text-xl'>Contact information</label>
              <input className={inputClasses} placeholder="Email" name="email" defaultValue={input.shipping.email} />
              <div className="flex space-x-2 items-center">
                <input type="checkbox" className="h-4 w-4 border rounded" name="newsletter" defaultChecked={input.newsletter} onChange={handleSignup} />
                <label className="text-gray-600">Email me with news, updates and offers</label>
              </div>
            </fieldset>
            <fieldset className='flex flex-col space-y-4'>
              <label className='font-heading text-vibrant text-xl'>Shipping address</label>
              <div className="flex space-x-2">
                <input className={inputClasses} placeholder="First name" name="firstName" onChange={ handleOnChange } defaultValue={input.shipping.firstName} />
                <input className={inputClasses} placeholder="Last name" name="lastName" onChange={ handleOnChange } defaultValue={input.shipping.lastName} />
              </div>
              <input className={inputClasses} placeholder="Address" name="address1" onChange={ handleOnChange } defaultValue={input.shipping.address1} />
              <input className={inputClasses} placeholder="Apartment, suite, etc (optional)" name="address2" onChange={ handleOnChange } defaultValue={input.shipping.address2} />
              <div className="flex space-x-2">
                <input className={inputClasses} placeholder="Suburb" name="suburb" onChange={ handleOnChange } defaultValue={input.shipping.suburb} />
                <input className={inputClasses} placeholder="State" name="state" onChange={ handleOnChange } defaultValue={input.shipping.state} />
                <input className={inputClasses} placeholder="Postcode" name="postcode" onChange={ handleOnChange } defaultValue={input.shipping.postcode} />
              </div>
              <input className="h-11 border border-gray-300 px-3 rounded text-gray-500 bg-white cursor-not-allowed" defaultValue={input.shipping.country} name="country" disabled />
              <input className={inputClasses} placeholder="Phone (optional)" name="phone" onChange={ handleOnChange } defaultValue={input.shipping.phone} />
            </fieldset>
            <div className='flex space-x-4'>
            {/* <button className='font-display uppercase text-white bg-mauve py-6 text-base bg-vibrant px-6 hover:bg-red-700' onClick={createCheckOutSession}>Checkout</button> */}
              <button className='font-display uppercase text-vibrant py-6 text-base bg-white px-6 hover:bg-gray-200' onClick={() => console.log("weefw")}>Pay</button>
              <Link href="/cart"><button className='font-display uppercase py-6 text-base text-gray-600 px-6 hover:bg-black hover:bg-opacity-10'>Return to cart</button></Link>
            </div>
            <div className="border border-gray-300">
              <div><span>Contact</span></div>
              <div></div>
            </div>
          </div>
        </div>
        <div className='flex-1'>
          {products.map((product, i) =>
            <div className="border-b border-vibrant flex w-full" key={`product_${i}`}>
              <div className="border-r border-vibrant py-12 px-12">
                <div className="w-full flex space-x-2 items-center">
                  <Image src={product.image} width={170} height={150} />
                  <div className="flex flex-col text-lg font-body uppercase space-y-2 text-vibrant">
                    <h3 className="font-display text-xl text-vibrant mb-2 uppercase">{product.title}</h3>
                    {product.cookies && product.cookies.map(cookie =>
                      <div className="" key={cookie.id}>{cookie.quantity} X {cookie.name}</div>
                    )}
                  </div>
                </div>
              </div>
              <div className="font-body text-2xl text-vibrant px-8 py-4 text-center border-r border-vibrant flex items-center justify-center">
                ${product.price}
              </div>
              <div className="font-body text-2xl text-vibrant px-8 py-4 text-center border-r border-vibrant flex items-center justify-center">
                {product.quantity}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}
